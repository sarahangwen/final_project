doctype html
html
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title Procure Produce
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css' rel='stylesheet')
  body
    nav.navbar.navbar-light.bg-light
      .container.d-flex.justify-content-center
        ul.nav
          li.nav-item
            a.nav-link(href='/managerMaganjoDash') Back to Dashboard

    .container.mt-4
      h3.mb-3 Record New Procurement
      form#procurementForm(method='POST' action='/addProduct' onsubmit='return validateForm()')
        .row.mb-3
          .col
            label(for='produceName') Produce Name
            select#produceName.form-select(name='produceName' required)
              option(value='') -- Select Produce Name --
              option(value='Beans') Beans
              option(value='Maize Grains') Maize Grains
              option(value='G-Nuts') G-Nuts 
              option(value='Soya Beans') Soya Beans
              option(value='Cow Peas') Cow Peas 
          .col
            label(for='produceType') Produce Type
            select#produceType.form-select(name='produceType' required)
              option(value='') -- Select Produce Type --
              option(value='Legume') Legume
              option(value='Cereals') Cereals

        .row.mb-3
          .col
            label(for='procureDate') Date
            input#procureDate.form-control(type='date' name='procureDate' required)
          .col
            label(for='procureTime') Time
            input#procureTime.form-control(type='time' name='procureTime' required)

        .row.mb-3
          .col
            label(for='tonnage') Tonnage (kg)
            input#tonnage.form-control(type='number' name='tonnage' required)
          .col
            label(for='cost') Cost (UGX)
            input#cost.form-control(type='number' name='cost' required)

        .row.mb-3
          .col
            label(for='dealerName') Dealer Name
            input#dealerName.form-control(type='text' name='dealerName' required)
          .col
            label(for='branchName') Branch Name
            select#branchName.form-select(name='branchName' required)
              option(value='') -- Select Branch --
              option(value='Maganjo') Maganjo
              option(value='Matugga') Matugga

        .row.mb-3
          .col
            label(for='contact') Dealer Contact (Phone)
            input#contact.form-control(type='tel' name='contact' required)
          .col
            label(for='sellPrice') Selling Price (UGX)
            input#sellPrice.form-control(type='number' name='sellPrice' required)

        button.btn.btn-success(type='submit') Submit Procurement

    .container
      h3.mt-5 Existing Procurements
      table.table.table-bordered
        thead.table-dark
          tr
            th Produce Name
            th Type
            th Date
            th Time
            th Tonnage
            th Cost
            th Dealer
            th Branch
            th Contact
            th Price (UGX)
        tbody
          if product && product.length
            each product in products
              tr
                td #{product.produceName}
                td #{product.produceType}
                td #{ moment(product.procureDate).format("DD-MM-YYYY") }
                td #{product.procureTime}
                td #{product.tonnage.toLocaleString()}
                td #{product.cost.toLocaleString()}
                td #{product.dealerName}
                td #{product.branchName}
                td #{product.contact}
                td #{product.sellPrice.toLocaleString()}
          else
            tr
              td(colspan='10') No procurements found.

    // Bootstrap Bundle
    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js')

    // JS Auto-fill and Validation
    script.
      // Auto-set date and time on page load
      window.onload = () => {
        const now = new Date();
        const dateField = document.getElementById('procureDate');
        const timeField = document.getElementById('procureTime');

        const yyyy = now.getFullYear();
        const mm = String(now.getMonth() + 1).padStart(2, '0');
        const dd = String(now.getDate()).padStart(2, '0');
        const hh = String(now.getHours()).padStart(2, '0');
        const min = String(now.getMinutes()).padStart(2, '0');

        dateField.value = `${yyyy}-${mm}-${dd}`;
        timeField.value = `${hh}:${min}`;
      }

      function validateForm() {
        const name = document.getElementById('produceName').value.trim();
        const type = document.getElementById('produceType').value;
        const date = document.getElementById('procureDate').value;
        const time = document.getElementById('procureTime').value;
        const tonnage = document.getElementById('tonnage').value;
        const cost = document.getElementById('cost').value;
        const dealer = document.getElementById('dealerName').value.trim();
        const contact = document.getElementById('contact').value.trim();
        const sellPrice = document.getElementById('sellPrice').value;
        const branch = document.getElementById('branchName').value;

        const phoneRegex = /^0\d{9}$/;

        if (!name) {
          alert('Produce Name is required.');
          return false;
        }

        if (!type) {
          alert('Please select a produce type.');
          return false;
        }

        if (!date || !time) {
          alert('Both Date and Time are required.');
          return false;
        }

        if (!tonnage || tonnage.length < 3 || Number(tonnage) < 100) {
          alert('Tonnage must be at least 3 digits (min 100kg).');
          return false;
        }

        if (!cost || cost.length < 5 || Number(cost) <= 0) {
          alert('Cost must be a numeric value with at least 5 digits.');
          return false;
        }

        if (!dealer || dealer.length < 2) {
          alert('Dealer Name must be at least 2 characters.');
          return false;
        }

        if (!phoneRegex.test(contact)) {
          alert('Contact must be a valid Ugandan phone number (e.g. 07XXXXXXXX).');
          return false;
        }

        if (!branch) {
          alert('Please select a branch.');
          return false;
        }

        if (!sellPrice || sellPrice.length < 5 || Number(sellPrice) <= 0) {
          alert('Selling Price must be a numeric value with at least 5 digits.');
          return false;
        }

        return true;
      }
